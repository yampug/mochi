# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/paggio/all/paggio.rbi
#
# paggio-0.3.0

class Paggio
end
module Paggio::Utils
  def self.deep_merge!(a, b); end
  def self.deep_merge(a, b); end
  def self.heredoc(string); end
end
class Paggio::HTML < BasicObject
  def <<(what); end
  def build!(force_call: nil); end
  def e(name, *args, &block); end
  def each(&block); end
  def element!; end
  def extend!(element = nil, &block); end
  def initialize(version = nil, defer: nil, &block); end
  def inspect; end
  def method_missing(name, *args, &block); end
  def root!; end
  def roots!; end
  def text(*fragments, &block); end
  def version; end
end
class Paggio::HTML::Element < BasicObject
  def <<(what); end
  def >>(content); end
  def [](*names); end
  def data(*args, &body); end
  def do(&block); end
  def each(&block); end
  def initialize(owner, name, attributes = nil); end
  def inspect; end
  def method_missing(name, content = nil, &block); end
  def self.defhelper!(name, attribute = nil); end
  def self.defhelper(name, &block); end
  def self.new(owner, name, attributes = nil); end
  def style(*args, &body); end
end
class Paggio::HTML::Element::A < Paggio::HTML::Element
  def download!(*args, &body); end
  def href(*args, &body); end
  def lang(*args, &body); end
  def language(*args, &body); end
  def media(*args, &body); end
  def ping!(*args, &body); end
  def rel(*args, &body); end
  def relative(*args, &body); end
  def target(*args, &body); end
  def text(*args, &body); end
  def type(*args, &body); end
  def url(*args, &body); end
end
class Paggio::HTML::Element::Base < Paggio::HTML::Element
  def href(*args, &body); end
  def target(*args, &body); end
  def url(*args, &body); end
end
class Paggio::HTML::Element::Blockquote < Paggio::HTML::Element
  def cite(*args, &body); end
end
class Paggio::HTML::Element::Button < Paggio::HTML::Element
  def action(*args, &body); end
  def autofocus!(*args, &body); end
  def disabled!(*args, &body); end
  def encoding(*args, &body); end
  def form(*args, &body); end
  def method(*args, &body); end
  def name(*args, &body); end
  def target(*args, &body); end
  def type(*args, &body); end
  def value(*args, &body); end
end
class Paggio::HTML::Element::Canvas < Paggio::HTML::Element
  def height(*args, &body); end
  def width(*args, &body); end
end
class Paggio::HTML::Element::Embed < Paggio::HTML::Element
  def height(*args, &body); end
  def type(*args, &body); end
  def width(*args, &body); end
end
class Paggio::HTML::Element::Img < Paggio::HTML::Element
  def alt(*args, &body); end
  def description(*args, &body); end
  def height(*args, &body); end
  def map!(*args, &body); end
  def map(*args, &body); end
  def src(*args, &body); end
  def url(*args, &body); end
  def width(*args, &body); end
end
class Paggio::HTML::Element::Input < Paggio::HTML::Element
  def limit(*args, &body); end
  def name(*args, &body); end
  def place_holder(*args, &body); end
  def read_only(*args, &body); end
  def required(*args, &body); end
  def size(*args, &body); end
  def type(*args, &body); end
  def value(*args, &body); end
end
class Paggio::HTML::Element::Link < Paggio::HTML::Element
  def cross_origin(*args, &body); end
  def href(*args, &body); end
  def href_lang(*args, &body); end
  def media(*args, &body); end
  def rel(*args, &body); end
  def sizes(*args, &body); end
  def type(*args, &body); end
end
class Paggio::HTML::Element::Object < Paggio::HTML::Element
  def data(*args, &body); end
  def height(*args, &body); end
  def name(*args, &body); end
  def type(*args, &body); end
  def width(*args, &body); end
end
class Paggio::HTML::Element::Option < Paggio::HTML::Element
  def disabled!(*args, &body); end
  def label(*args, &body); end
  def selected!(*args, &body); end
  def value(*args, &body); end
end
class Paggio::HTML::Element::Optgroup < Paggio::HTML::Element
  def disabled!(*args, &body); end
  def label(*args, &body); end
  def selected!(*args, &body); end
  def value(*args, &body); end
end
class Paggio::HTML::Element::Select < Paggio::HTML::Element
  def auto_focus!(*args, &body); end
  def disabled!(*args, &body); end
  def form(*args, &body); end
  def name(*args, &body); end
  def required!(*args, &body); end
  def size(*args, &body); end
end
class Paggio::HTML::Element::Td < Paggio::HTML::Element
  def columns(*args, &body); end
  def headers(*args, &body); end
  def rows(*args, &body); end
end
class Paggio::CSS < BasicObject
end
class Paggio::CSS::Unit
  def *(other); end
  def +(other); end
  def +@; end
  def -(other); end
  def -@; end
  def /(other); end
  def ==(other); end
  def ===(other); end
  def ch; end
  def cm; end
  def coerce(other); end
  def compatible?(unit); end
  def convert(unit, type); end
  def deg; end
  def em; end
  def eql?(other); end
  def ex; end
  def hash; end
  def in; end
  def initialize(number, type); end
  def inspect; end
  def mm; end
  def number; end
  def pc; end
  def pt; end
  def px; end
  def rem; end
  def s; end
  def to_f; end
  def to_i; end
  def to_s; end
  def to_str; end
  def to_u; end
  def type; end
  def vh; end
  def vmax; end
  def vmin; end
  def vw; end
end
class Numeric
  def ch; end
  def cm; end
  def deg; end
  def em; end
  def ex; end
  def in; end
  def mm; end
  def pc; end
  def pt; end
  def px; end
  def rem; end
  def s; end
  def to_u; end
  def vh; end
  def vmax; end
  def vmin; end
  def vw; end
end
